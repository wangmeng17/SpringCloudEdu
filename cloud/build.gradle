buildscript {
    ext {
        springBootVersion = '2.1.0.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'maven'

group = 'com.mm.spring'
version = '0.0.1-SNAPSHOT'

description = """cloud"""

sourceCompatibility = 1.8
targetCompatibility = 1.8
tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}

repositories {
     maven { url "http://repo.maven.apache.org/maven2" }
}

configurations {
    mybatisGenerator
}

def getDbProperties = {
    def properties = new Properties()
    file("src/main/resources/mybatis/config/mybatis-jdbc.properties").withInputStream { inputStream ->
        properties.load(inputStream)
    }
    properties
}

task mybatisGenerate << {
    def properties = getDbProperties()
    ant.properties['targetProject'] = projectDir.path
    ant.properties['driverClass'] = properties.getProperty("jdbc.driver")
    ant.properties['connectionURL'] = properties.getProperty("jdbc.url")
    ant.properties['userId'] = properties.getProperty("jdbc.username")
    ant.properties['password'] = properties.getProperty("jdbc.password")
    ant.properties['src_main_java'] = sourceSets.main.java.srcDirs[0].path
    ant.properties['src_main_resources'] = sourceSets.main.resources.srcDirs[0].path
    ant.properties['beanPackage'] = properties.getProperty("package.bean")
    ant.properties['mapperPackage'] = properties.getProperty("package.mapper")
    ant.properties['sqlMapperPackage'] = properties.getProperty("resource.xml.mapper")
    ant.taskdef(
            name: 'mbgenerator',
            classname: 'org.mybatis.generator.ant.GeneratorAntTask',
            classpath: configurations.mybatisGenerator.asPath
    )
    ant.mbgenerator(overwrite: true,
            configfile: 'src/main/resources/mybatis/config/generatorConfig.xml', verbose: true) {
        propertyset {
            propertyref(name: 'targetProject')
            propertyref(name: 'userId')
            propertyref(name: 'driverClass')
            propertyref(name: 'connectionURL')
            propertyref(name: 'password')
            propertyref(name: 'src_main_java')
            propertyref(name: 'src_main_resources')
            propertyref(name: 'beanPackage')
            propertyref(name: 'mapperPackage')
            propertyref(name: 'sqlMapperPackage')
        }
    }
}


dependencies {
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-web', version:'2.1.0.RELEASE'
    compile group: 'org.projectlombok', name: 'lombok', version:'1.18.2'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-actuator', version:'2.1.0.RELEASE'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-redis', version:'2.1.0.RELEASE'
    compile group: 'io.springfox', name: 'springfox-swagger2', version:'2.9.2'
    compile group: 'io.springfox', name: 'springfox-swagger-ui', version:'2.9.2'
    compile group: 'org.springframework.boot', name: 'spring-boot-configuration-processor', version:'2.1.0.RELEASE'
    compile group: 'org.mybatis.spring.boot', name: 'mybatis-spring-boot-starter', version:'1.3.2'
    compile(group: 'mysql', name: 'mysql-connector-java', version:'8.0.13') {
exclude(module: 'protobuf-java')
    }

    mybatisGenerator 'org.mybatis.generator:mybatis-generator-core:1.3.7'
    mybatisGenerator 'mysql:mysql-connector-java:8.0.13'
    mybatisGenerator 'tk.mybatis:mapper:4.0.4'

    compile group: 'com.alibaba', name: 'druid', version:'1.1.12'
    compile group: 'com.google.code.gson', name: 'gson', version:'2.8.5'
    testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test', version:'2.1.0.RELEASE'
}
